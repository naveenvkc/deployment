version: "3.8"
services:
  
 # Applications
  catalog-service:
    depends_on:
      - polar-postgres
    image: "catalog-service" 
    container_name: "catalog-service"
    ports:
      - 9001:9001
      - 8001:8001
    environment:
      - BPL_JVM_THREAD_COUNT=50
      - BPL_DEBUG_ENABLED=true
      - BPL_DEBUG_PORT=8001
      - SPRING_DATASOURCE_URL=jdbc:postgresql://polar-postgres:5432/polardb_catalog?currentSchema=polar_bookshop

  order-service:
    depends_on:
      - polar-postgres
      - catalog-service
    image: "order-service" 
    container_name: "order-service"
    ports:
      - 9002:9002
      - 8002:8002
    environment:
      - BPL_JVM_THREAD_COUNT=50
      - BPL_DEBUG_ENABLED=true
      - BPL_DEBUG_PORT=8002
      - SPRING_DATASOURCE_URL=jdbc:postgresql://polar-postgres:5432/polardb_order?currentSchema=polar_bookshop
      - POLAR_CATALOG-SERVICE-URI=http://catalog-service:9001
      - SPRING_RABBITMQ_HOST=polar-rabbitmq
      
  dispatcher-service:
    depends_on:
      - polar-rabbitmq
    image: "dispatcher-service"
    container_name: "dispatcher-service"
    ports:
      - 9003:9003
      - 8003:8003
    environment:
      - BPL_DEBUG_ENABLED=true
      - BPL_DEBUG_PORT=8003
      - SPRING_RABBITMQ_HOST=polar-rabbitmq

  edge-service:
    depends_on:
      - polar-redis
    image: "edge-service" 
    container_name: "edge-service"
    ports:
      - 9000:9000
      - 8000:8000
    environment:
      - BPL_DEBUG_ENABLED=true
      - BPL_DEBUG_PORT=8000
      - CATALOG_SERVICE_URL=http://catalog-service:9001
      - ORDER_SERVICE_URL=http://order-service:9002
      - SPRING_DATA_REDIS_HOST=polar-redis      
  
 # Backing Services
  
  polar-postgres:
    image: "postgres:14.4"
    container_name: "polar-postgres"
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    volumes:
      - ./postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql
      
  polar-redis:
    image: "redis:7.0"
    container_name: "polar-redis"
    ports:
      - 6379:6379
      
  polar-rabbitmq:
    image: rabbitmq:3.10-management
    container_name: polar-rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      
  zookeeper:
    image: "confluentinc/cp-zookeeper:7.3.0"
    container_name: "zookeeper"
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper:2888:3888
      
  schema-registry:
    image: "confluentinc/cp-schema-registry:7.3.0"
    hostname: "schema-registry"
    depends_on:
      - zookeeper
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
    ports:
      - 8081:8081
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-broker-2:9092,LISTENER_LOCAL://localhost:29092
      SCHEMA_REGISTRY_DEBUG: 'true'

  kafka-broker-1:
    image: "confluentinc/cp-kafka:7.3.0"
    hostname: "kafka-broker-1"
    ports:
      - 19092:19092
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-1:9092,LISTENER_LOCAL://localhost:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,LISTENER_LOCAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_COMPRESSION_TYPE: producer

  kafka-broker-2:
    image: "confluentinc/cp-kafka:7.3.0"
    hostname: "kafka-broker-2"
    ports:
      - 29092:29092
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-2:9092,LISTENER_LOCAL://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,LISTENER_LOCAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_COMPRESSION_TYPE: producer

  kafka-broker-3:
    image: "confluentinc/cp-kafka:7.3.0"
    hostname: "kafka-broker-3"
    ports:
      - 39092:39092
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-3:9092,LISTENER_LOCAL://localhost:39092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,LISTENER_LOCAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_COMPRESSION_TYPE: producer
      
  