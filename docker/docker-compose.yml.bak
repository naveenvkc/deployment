version: "3.8"
services:
  
 # Applications
  catalog-service:
    depends_on:
      - fluent-bit
      - polar-postgres
      - polar-keycloak
      - tempo
    image: "catalog-service" 
    container_name: "catalog-service"
    ports:
      - 9001:9001
      - 8001:8001
    environment:
      - BPL_JVM_THREAD_COUNT=50
      - BPL_DEBUG_ENABLED=true
      - BPL_DEBUG_PORT=8001
      - SPRING_DATASOURCE_URL=jdbc:postgresql://polar-postgres:5432/polardb_catalog?currentSchema=polar_bookshop
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI=http://host.docker.internal:8080/realms/PolarBookshop
      - JAVA_TOOL_OPTIONS=-javaagent:/workspace/BOOT-INF/lib/opentelemetry-javaagent-1.17.0.jar
      - OTEL_SERVICE_NAME=catalog-service
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://tempo:4317
      - OTEL_METRICS_EXPORTER=none
    logging:
      driver: fluentd
      options:
        fluentd-address: 127.0.0.1:24224

  order-service:
    depends_on:
      - catalog-service
    image: "order-service" 
    container_name: "order-service"
    ports:
      - 9002:9002
      - 8002:8002
    environment:
      - BPL_JVM_THREAD_COUNT=50
      - BPL_DEBUG_ENABLED=true
      - BPL_DEBUG_PORT=8002
      - SPRING_DATASOURCE_URL=jdbc:postgresql://polar-postgres:5432/polardb_order?currentSchema=polar_bookshop
      - POLAR_CATALOG-SERVICE-URI=http://catalog-service:9001
      - SPRING_RABBITMQ_HOST=polar-rabbitmq
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI=http://host.docker.internal:8080/realms/PolarBookshop
      - JAVA_TOOL_OPTIONS=-javaagent:/workspace/BOOT-INF/lib/opentelemetry-javaagent-1.17.0.jar
      - OTEL_SERVICE_NAME=order-service
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://tempo:4317
      - OTEL_METRICS_EXPORTER=none
    logging:
      driver: fluentd
      options:
        fluentd-address: 127.0.0.1:24224
      
  dispatcher-service:
    depends_on:
      - fluent-bit
      - polar-rabbitmq
      - tempo
    image: "dispatcher-service"
    container_name: "dispatcher-service"
    ports:
      - 9003:9003
      - 8003:8003
    environment:
      - BPL_DEBUG_ENABLED=true
      - BPL_DEBUG_PORT=8003
      - SPRING_RABBITMQ_HOST=polar-rabbitmq
      - JAVA_TOOL_OPTIONS=-javaagent:/workspace/BOOT-INF/lib/opentelemetry-javaagent-1.17.0.jar
      - OTEL_SERVICE_NAME=dispatcher-service
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://tempo:4317
      - OTEL_METRICS_EXPORTER=none
    logging:
      driver: fluentd
      options:
        fluentd-address: 127.0.0.1:24224

  edge-service:
    depends_on:
      - fluent-bit
      - polar-redis
      - polar-keycloak
      - tempo 
    image: "edge-service" 
    container_name: "edge-service"
    ports:
      - 9000:9000
      - 8000:8000
    environment:
      - BPL_DEBUG_ENABLED=true
      - BPL_DEBUG_PORT=8000
      - CATALOG_SERVICE_URL=http://catalog-service:9001
      - ORDER_SERVICE_URL=http://order-service:9002
      - SPRING_DATA_REDIS_HOST=polar-redis
      - SPA_URL=http://polar-ui:9004
      - SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER_URI=http://host.docker.internal:8080/realms/PolarBookshop
      - JAVA_TOOL_OPTIONS=-javaagent:/workspace/BOOT-INF/lib/opentelemetry-javaagent-1.17.0.jar
      - OTEL_SERVICE_NAME=edge-service
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://tempo:4317
      - OTEL_METRICS_EXPORTER=none 
    logging:
      driver: fluentd
      options:
        fluentd-address: 127.0.0.1:24224
      
  polar-ui:
    image: "polar-ui"
    container_name: "polar-ui"
    ports:
      - 9004:9004
    environment:
      - PORT=9004      
  
 # Backing Services
  
  polar-postgres:
    image: "postgres:14.4"
    container_name: "polar-postgres"
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    volumes:
      - ./postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql
      
  polar-redis:
    image: "redis:7.0"
    container_name: "polar-redis"
    ports:
      - 6379:6379
      
  polar-rabbitmq:
    image: rabbitmq:3.10-management
    container_name: polar-rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      
  polar-keycloak:
    image: quay.io/keycloak/keycloak:19.0
    container_name: "polar-keycloak"
    command: start-dev --import-realm
    volumes:
      - ./keycloak:/opt/keycloak/data/import
    environment:
      - KEYCLOAK_ADMIN=user
      - KEYCLOAK_ADMIN_PASSWORD=password
    ports:
      - 8080:8080

 # Observability
      
  grafana:
    image: grafana/grafana:9.1.2
    container_name: grafana
    depends_on:
      - loki
      - prometheus
      - tempo
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=user
      - GF_SECURITY_ADMIN_PASSWORD=password
    volumes:
      - ./observability/grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./observability/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./observability/grafana/grafana.ini:/etc/grafana/grafana.ini
      
  loki:
    image: grafana/loki:2.6.1
    container_name: loki
    depends_on:
      - fluent-bit
    ports:
      - "3100:3100"
      
  fluent-bit:
    image: grafana/fluent-bit-plugin-loki:2.6.1-amd64
    container_name: fluent-bit
    ports:
      - "24224:24224"
    environment:
      - LOKI_URL=http://loki:3100/loki/api/v1/push
    volumes:
      - ./observability/fluent-bit/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf
      
  prometheus:
    image: prom/prometheus:v2.38.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./observability/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  tempo:
    image: grafana/tempo:1.5.0
    container_name: tempo
    command: -config.file /etc/tempo-config.yml
    ports:
      - "4317:4317"
    volumes:
      - ./observability/tempo/tempo.yml:/etc/tempo-config.yml
      
